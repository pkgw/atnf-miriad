#!/bin/csh -ef
#-----------------------------------------------------------------------------
# Usage: mirexport
#-----------------------------------------------------------------------------
# Generate Miriad update tar files for distribution from the ftp area.
#
# $Id$
#-----------------------------------------------------------------------------
# Initialize.
  cd $MIR

  set etc      = $MIR/etc
  set updates  = /nfs/ftp/software/miriad/updates
  set contents = /tmp/mirupd-contents-$$
  set scratch  = /tmp/mirupd-dir-$$

  rm -f $updates/mirupd-99999999-9.tar.gz $updates/mirupdates $updates/junk

# Determine which files need to be updated.
  set distcode = (./GNUmake* config ./configure ./configure.ac \
                  guides inc linpack prog spec subs tests tools)
  set distcomm = (./DISCLAIMER ./INSTALL.html ./progguide* ./userguide* \
                  cat doc html man scripts specdoc)

  find $distcode $distcomm \
    \! -type d \
    \! -name RCS \
    \! -name rpfits.inc \
    \! -name '*.aux' \
    \! -name '*.dvi' \
    \! -name '*.log' \
    \! -name '*.lot' \
    \! -name '*.toc' \
    -newer $etc/Last_export -print > $contents

  if (-z "$contents") goto l100

# Generate the output tar file.
  set output = `date -u +'mirupd-%Y%m%d-8.tar'`
  if (-f "$updates/$output.gz") then
    # It already exists - create an addendum.
    set output = mirupd-99999999-9.tar
  endif

# Create the version date (UTC) for this update.
  rm -f VERSION
  date -u +'%Y%m%d' > VERSION
  chmod 444 VERSION

  tar -cf $output VERSION `sort $contents`
  rm -f VERSION

  gzip -f $output
  mv $output.gz $updates

# Record the time.
  if ("$output" != mirupd-99999999-9.tar) then
    echo $output.gz >> $etc/Last_export
  endif

# Report the contents of tar file.
  echo "Contents of update tar file ${output}:"
  zcat $updates/$output.gz | tar tvf -

l100:
  rm -rf $contents $scratch

# Combine tar files in a hierarchical fashion: starting at level 8, if there
# are more than the specified number of files (usually 4) at level n then
# combine the oldest four into one file at level n-1.  The lower levels
# therefore span progressively longer times.
  cd $updates
  foreach n (8 7 6 5 4 3 2 1)
    set files = (`find . -name "mirupd-????????-$n.tar.gz" -print | sort`)
    if ($#files == 0) break

    # Allow level 8 to grow a bit larger since it contains the most recent.
    set limit = 4
    if ($n == 8) set limit = 7

    while ($#files > $limit)
      # Combine the oldest four.
      set combine = ($files[1-4])
      set files = ($files[5-])

      mkdir $scratch
      foreach file ($combine)
        zcat $file | (cd $scratch; tar -xmf -)
      end

      # Put the combined file in the level below with the more recent date.
      @ nm1 = $n - 1
      set output = `echo $combine[4] | sed -e "s/-$n\.tar\.gz/-$nm1\.tar/"`
      tar -cf /tmp/$output -C $scratch .
      gzip -f /tmp/$output

      # Copy then rename so that if the copy crashes we are not left with a
      # corrupted tar file.
      cp /tmp/$output.gz junk
      mv junk $output.gz

      # Clean up.
      rm -rf $scratch $combine /tmp/$output.gz
      echo "Combined $combine into $output."
    end
  end

# Produce the list of update tar files.
  ls mirupd-????????-?.tar.gz > mirupdates
