#!/bin/csh -f

# Usage:
#   doc2html topic.doc [taskref]
#
#   The taskref file lists user guide references to tasks.

if ( $#argv < 2 ) then
  set taskref = "/find/does/not/exist"
else
  set taskref = "$argv[2]"
endif

set topic = $argv[1]
set topic = $topic:r
set topic = $topic:t
set out = $topic.html
set sed_script = /tmp/$$.sed
set tmp	       = /tmp/$$.tmp

# Is it one of the special topics?

set specials = (cgcoords confighist device in line offset oldflux options out \
		region select server stokes telescop vis weatherdata window )

set special_topic = 0
foreach special ($specials)
  if ( $topic == $special ) set special_topic = 1
end

# Convert special characters.

echo 's/\&/\&amp;/g' 				>  $sed_script
echo 's/</\&lt;/g' 				>> $sed_script
echo 's/>/\&gt;/g'				>> $sed_script
echo 's/WARNING:/<B>WARNING:<\/B>/g'		>> $sed_script
echo 's/NOTE:/<B>NOTE:<\/B>/g'			>> $sed_script
echo 's/astro-ph\/\([0-9]*\)/<a href="http:\/\/xxx\.lanl\.gov\/abs\/astro-ph\/\1">astro-ph\/\1<\/a>/' >> $sed_script
# Look for HTML and ftp links.

cat $argv[1]|tr -s "[:space:]" "[\n*]" > junk.doc2html.$$
grep http:// junk.doc2html.$$ > junk.tmp.$$
grep ftp:// junk.doc2html.$$ >> junk.tmp.$$
set links = (`sort junk.tmp.$$|uniq`)
rm -rf junk.tmp.$$ junk.doc2html.$$
if ( $#links > 0 ) then
  foreach link ($links)
    echo 's|'$link'|<a href="'$link'">'$link'</a>|g' >> $sed_script
  end
endif

# Create links to the special topics.

foreach special ( $specials )
  echo 's/"'$special'"/<a href="'$special'.html">'$special'<\/a>/' >> $sed_script
end
#echo 's/"/ /g' 					>> $sed_script

# If its a special topic, do no more. Otherwise if its a plain topic,
# add in the links to the special topics.

if (! $special_topic ) then
  foreach special ( $specials )
    echo 's/^Key: '$special'$/Key: <a name="'$special'"><a href="'$special'.html">'$special'<\/a>/' >> $sed_script
  end
endif

echo 's/^Key: \([a-z]*\)$/Key: <a name="\1">\1/'	>> $sed_script

# Check for external references.

set doref = 0
if ( -f $taskref ) then
  grep "^$topic " $taskref |sed "s/^$topic /<LI>/" > $tmp
  if ( ! -z $tmp ) set doref = 1
endif

# More book keeping.

set user = "miriad@atnf.csiro.au"
set date = (`date +"%d %h %Y"`)

# Finally generate the document.

echo "<title>"  Documentation on $topic "</title>"			>  $out
echo '<body bgcolor=white background=/computing/software/miriad/hmiriad.gif>' >> $out
echo '<a name="basic">'							>> $out
if ( $doref ) then
  echo '<center>[ <a href="#basic">Basic Info</a> | <a href="#refs">References</a> | <a href="userhtml.html">User Guide</a> ]</center>' >> $out
else
  echo '<center>[ <a href="#basic">Basic Info</a> | <a href="userhtml.html">User Guide</a> ]</center>' >> $out
endif
if ( "$topic" == "changes" ) then
  echo "<h1>Recent changes to <i>Miriad</i></h1>"			>> $out
else
  echo "<h1>Basic Information on $topic</h1>"				>> $out
endif
echo "<pre>"								>> $out
docfmt $argv[1] | sed -f $sed_script					>> $out
echo "</pre>"								>> $out
echo "<hr>"								>> $out

# Now generate the user guide references, if availible.

if ($doref) then
  echo '<a name="refs">'						>> $out
  echo "<h1>"  User Guide References to $topic "</h1>"			>> $out
  echo "<ul>"								>> $out
  cat $tmp								>> $out
  echo "</ul>"								>> $out
  echo '<center>[ <a href="#basic">Basic Info</a> | <a href="#refs">References</a> | <a href="userhtml.html">User Guide</a> ]</center>' >> $out
  echo "<hr>"								>> $out
endif

# Tidy up at last.

echo " "								>> $out
echo "<address>Generated by <a href=mailto:$user>$user</a> on $date </address>"			>> $out
echo "</body>"								>> $out
rm -f $sed_script $tmp
