#-----------------------------------------------------------------------------
# GNU makefile rules for Miriad software management, for ATNF use only.
#
# This is not a stand-alone makefile.  It is intended to be included in
# $(MIR)/GNUmakefile.
#
# Original: 2011/08/17, Mark Calabretta, ATNF (extracted from GNUmakefile)
# $Id$
#-----------------------------------------------------------------------------
# Files distributed separately.
MIRFTPS  := DISCLAIMER INSTALL.html \
            progguide.ps.gz progguide_US.ps.gz \
            userguide.ps.gz userguide_US.ps.gz

# The Miriad distribution is split into RCS, code, common runtime files, and
# platform-specific binary kits.
DISTRCS  := .rcs RCS */RCS */*/RCS */*/*/RCS
DISTCODE := GNUmake* config configure configure.ac
DISTCODE += guides inc linpack prog spec subs tests tools
DISTCOMM := DISCLAIMER INSTALL.html VERSION progguide* userguide*
DISTCOMM += cat doc html man scripts specdoc
DISTBINS := $(subst /bin,,$(wildcard */bin))

show ::
	-@ echo ""
	-@ echo "DISTRCS  = $(DISTRCS)"
	-@ echo ""
	-@ echo "MIRFTPS  = $(MIRFTPS)"
	-@ echo "DISTCODE = $(DISTCODE)"
	-@ echo "DISTCOMM = $(DISTCOMM)"
	-@ echo "DISTBINS = $(DISTBINS)"


# Pattern rules.
#---------------
VPATH := $(MIRROOT):$(MIRGUIDD)/user:$(MIRGUIDD)/prog

# For copying third-party libraries and associated utilities such as PGPLOT,
# RPFITS, and WCSLIB into the Miriad system directories for export.  Darwin
# requires that the library be ranlib'd if its time of last modification
# changes.
define mir-copy
  -@ $(RM) $@
     cp $< $@
  -@ chgrp miriad $@
  -@ case $@ in *.a) echo $(RANLIB) $@ ; $(RANLIB) $@ ;; esac
  -@ chmod 664 $@
endef

$(MIRLIBD)/% : /usr/local/lib/%
	   $(mir-copy)

$(MIRLIBD)/%_mir.a : /usr/local/lib/%.a
	   $(mir-copy)

$(MIRLIBD)/% : /usr/local/gnu/lib/%
	   $(mir-copy)

$(MIRLIBD)/% : /usr/lib/%
	   $(mir-copy)

$(MIRBIND)/% : /usr/local/bin/%
	   $(mir-copy)
	-@ chmod a+x $@

$(MIRBIND)/% : /usr/bin/%
	   $(mir-copy)
	-@ chmod a+x $@

# Don't worry if they can't be found.
$(MIRLIBD)/% : ;
$(MIRBIND)/% : ;

# For installing the ftp distribution files.
$(MIRFTPD)/% : %
	   $(mir-copy)

$(MIRFTPD)/% : etc/%
	   $(mir-copy)

$(MIRFTPD)/%.gz : %
	-@ $(RM) $@
	   cp $< $(MIRFTPD)/$*
	   gzip $(MIRFTPD)/$*
	-@ chgrp miriad $@
	-@ chmod 664 $@


# Static and static pattern rules.
#---------------------------------
.PHONY : bookings dist pgplot rpfits rsynx updates wcslib

# Update the copy of external libraries and include files via allsys.
initial :: pgplot rpfits wcslib
      ifdef MIRRCS
        # Update local stuff and architecture-specific GNUmakedefs.
	-@ echo ""
	-@ echo gmake[0]: $(MAKE) -C cat chkout
	-@ $(MAKE) -C cat chkout
	-@ echo ""
	-@ echo gmake[0]: $(MAKE) -C etc chkout
	-@ $(MAKE) -C etc chkout
	-@ echo ""
	-@ echo gmake[0]: $(MAKE) -C inc chkout
	-@ $(MAKE) -C inc chkout
	-@ echo ""
	-@ echo gmake[0]: $(MAKE) -C scripts chkout
	-@ $(MAKE) -C scripts chkout
      endif

pgplot : $(patsubst %,$(MIRLIBD)/lib%.a,$(PGPLOT) $(PNG) z) \
      $(addprefix $(MIRLIBD)/,grfont.dat rgb.txt) \
      $(addprefix $(MIRBIND)/,pgdisp pgxwin_server)

rpfits : $(MIRINCD)/rpfits.inc $(MIRLIBD)/librpfits.a

$(MIRINCD)/rpfits.inc : /usr/local/include/rpfits.inc
	-@ rcs -l $@ < /dev/null
	-@ $(RM) $@
	   cp $< $@
	 @ ci -u -m"Updated from /usr/local/include/rpfits.inc." $@

wcslib : $(MIRINCD)/wcslib $(MIRLIBD)/libwcs.a \
      $(addprefix $(MIRBIND)/,HPXcvt fitshdr wcsgrid wcsware)

$(MIRINCD)/wcslib : /usr/local/include/wcslib
	-@ mkdir -m 2775 -p -v $@
	   cd $< && rsync -v --recursive --perms --delete . $@

allsys :: $(MIRFTPS:%=$(MIRFTPD)/%)

rsynx :
	   $(MIR)/etc/rsynx

# Regenerate the Miriad ftp distribution kits, requires GNU tar.
ifneq "$(MIRARCH)" "sun4sol"
  TAROPTS := -C .. -X .tarX -T .tarT --no-recursion

  dist : configure
	-@ $(TIMER)
	-@ $(RM) .tarT .tarX
	 @ cd .. ; find miriad -path miriad/.mirsync -prune -o -name RCS | \
	             sort > miriad/.tarX
	 @ cd .. ; ls miriad/*/GNUmakedefs >> miriad/.tarX
	-@ echo ""
	 @ cd .. ; find $(DISTRCS:%=miriad/%)  | sort > miriad/.tarT
	   tar cf miriad-rcs.tar $(TAROPTS)
	   bzip2 miriad-rcs.tar
	-@ $(RM) $(MIRFTPD)/miriad-rcs.tar.bz2
	   mv miriad-rcs.tar.bz2 $(MIRFTPD)/
	-@ $(TIMER)
	-@ echo ""
	 @ cd .. ; find $(DISTCODE:%=miriad/%) | sort > miriad/.tarT
	   tar cf miriad-code.tar $(TAROPTS)
	   bzip2 miriad-code.tar
	-@ $(RM) $(MIRFTPD)/miriad-code.tar.bz2
	   mv miriad-code.tar.bz2 $(MIRFTPD)/
	-@ $(TIMER)
	-@ echo ""
	-@ $(RM) VERSION
	   date -u +'%Y%m%d' > VERSION
	-@ chmod 444 VERSION
	 @ cd .. ; find $(DISTCOMM:%=miriad/%) | sort > miriad/.tarT
	   tar cf miriad-common.tar $(TAROPTS)
	-@ $(RM) VERSION
	   bzip2 miriad-common.tar
	-@ $(RM) $(MIRFTPD)/miriad-common.tar.bz2
	   mv miriad-common.tar.bz2 $(MIRFTPD)/
	 @ for bin in $(DISTBINS) ; do \
	     $(TIMER) ; \
	     echo "" ; \
	     (cd .. ; find miriad/$$bin | sort > miriad/.tarT) ; \
	     echo "tar cf miriad-$$bin.tar $(TAROPTS)" ; \
	     tar cf miriad-$$bin.tar $(TAROPTS) ; \
	     echo "bzip2 miriad-$$bin.tar" ; \
	     bzip2 miriad-$$bin.tar ; \
	     $(RM) $(MIRFTPD)/miriad-$$bin.tar.bz2 ; \
	     echo "mv miriad-$$bin.tar.bz2 $(MIRFTPD)/" ; \
	     chmod 664 miriad-$$bin.tar.bz2 ; \
	     mv miriad-$$bin.tar.bz2 $(MIRFTPD)/ ; \
	   done
	-@ $(RM) .tarT .tarX
	-@ $(TIMER)
endif

configure : configure.ac
	-@ echo ""
	-@ $(TIMER)
	   autoconf

bookings :
	-@ echo ""
	-@ $(TIMER)
	-@ echo "Checking for users needing help..."
	 @ cd $(MIRROOT)/at_friends && ./CheckBookings

updates :
	-@ echo ""
	-@ $(TIMER)
	-@ echo "Creating updates..."
	 @ $(MIRBIND)/mirexport

help ::
	-@ echo "       dist: allsys, then generate distribution kits."
	-@ echo "   bookings: check disk bookings."
	-@ echo "    updates: create ftp update tar files."
